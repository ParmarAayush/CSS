Day 1 : 
    [ using % avoid to set Height ]
        - set * means all element apply box-sizing: border-box;
        - in the example code we use Height becaus we don't have content 

    [ % on the child ]
        - don't set height to childe element 
        - dont't set width but it's required in some situation
    
    [ why it's good idea to avoid height ]
        - if required more space use padding ( set to parent element ? )
        - suggest to use em unit rather then %

    [ Challenge 01 ]
        - aloways use margin after width if set


Day 2 : Getting familiar with relative unit 
    [ relative unit ]
        - em take font-size from parent element font size
        - em use for any other properties(padding, margin)
          measure size based on self font-size (adaptive nature)
        - use-full for buttons  

        - rem is truely based on html not body

    [ Why you shouldn't set font-sizes using em ]
        - for margin and padding use em beacuse its shrink with that element font size 
        - for font size use rem whcih depends upon html not body
        
Day 3 : Max-width   
    [ Challenge 1 solution ]

    [ adding in a max-width ]
        - after some limtes of width website makes awkward experience 
        - some time site create side scrolling if we drop below that width 
          solution is to always set width in % 
        
        - when we set max-width its stop growing afte some set point so its give equally prview in large screen device 
          and prevent streching from one side 
        - ( is important to set max-width after width ? )
    
    [ Challenge 02 ]

Day 4 : Extra curricular Activity
    [ CSS unit : vh, vw vmin, vmax ]
        - vh stands for viewport height but its create problem with smaller device 
          content oveflow so fix it using media query 
          
        - vw stands for viewport width same its take width equal to viewport
        - vw, vh is greater than %, percentage shrink with parent element

Day 5 : 
    [ font-face - self study ]
    [ source : https://www.youtube.com/watch?v=zK-yy6C2Nck&ab_channel=KevinPowell ]
    
        - download file in ttf formate and extract into assets/fonts
        - after extract file use "https://www.fontsquirrel.com/tools/webfont-generator"
        - alternative site and user-friendly "https://transfonter.org/"
          for decrease file size and other customization
        - download and use 

Day 6 :
    - em is usefull for buttons because we set font-size of button
      em changes based on font-size(in rem) of that elements 

    - set height width using padding along with em units now when 
      bigger or smaller screen then change font size and button automatically shrink with it 

Day 7 :
    - solution files of Challenge 3

Day 8 :
  [ Check Properties supported Browser - https://caniuse.com/ ]

    - in flexbox direct children element take minimum possible size(means content fit)
      divde equall width give them 100% by default its dependse on content

    - avoid to use gap beacuse it's not supported to all browser 
      instade of gap use combinatores like (.col + .col) select element who have
      adjacent sibling 

Day 9 : 

    - inside flexbox all the element shrink to the equal height
      prevent inside element from streching wraping with div now div streching but inside element not

    - another option to prevent element from streching is to give them align-self: flex-start;

    - Div > Div 1
          > Div 2 > img tag 

          in this case we applied display-flex to the Div then image is shrink because it's not children of flexbox 
          set max-width to 100%
    
    - Challenge 2 i code first html then load custom font 
      then design some global classes like display-flex and color
      then design typography and then divs 

    - design without margine padding and set proper layout and then
      set margin and padding 

Day 10 : 

    - for flex box items 
          flex-grow:; - take n prority if 1 then particular item take all the available space
                        if any item have 2 it take more avialable space than 2
          flex-shrink:; - same as grow but it's not for growth it's for shrink
          and flex-basis:; - take px and if space avialable then set that size to items

    - short hand for grow shrink and basis is flex: grow shrink basis;

    - in flex div we use align-items and for particular item we use align-self:;
      for example in dive there are three items we use align-item: center;
      but we want last item center then use for particular item align-slef:;

    - order for set order of items 

Day 11 : 

    - If you know the meaing of all symentic tag than it's good to use
      not know then use div instade of semntic html element 

Day 12 : 

    - add class to last two li element and css to margin-left:auto;
    - seprate with two ul and apply display flex to parent and justify-content:space-betwwn;

  [ problem in menu bar ]
    - when we add logo other element streching upside now we know that 
      justify-content allow to excess x axsis and align-items work with cross axsis, so center cross axsis using align-item
    
    - if it not work then inspect element and try to put align-self:center;
    
Day 13 and 14: 

Day 15 :

  Syntax :
    - @media(size){} 
    - @media(size) and (size){}

  Example 1:
    - size take min-width : design applied to the bigger than given size
    - @media(min-width:600px) : 600px or bigger

  Example 2:
    - size take max-width : design applied to the smaller tha given size 
    - @media(max-width:900px) : 900px or smaller
  
  Example 3:
    - using and operater, style applied between to the given size
    - @media(min-width:600px) and (max-width:900px) : style applied between 600px to 900px

Day 16 :

  - when layout start to failed and nedd changes that's breakpoint.
    at point change your display behaviour 

Day 17 :

    - set our site width is equal to view port-width
      (comment meta and observe when we decrease width its like zoom out tings gets smaller)

    - scale that set default 1.0 means normal and it represent zoom-in zoom-out value

Day 18 :

    - try to put always element inside div 
    - style mobile device first becaus you dont design much only set typography margin or padding
    
    - use line height for big heading becaus it take more white space betwwen line when line break
    - give priority based on numbers of user if mobile user then design mobile first
      if desktop is prority then desktop first

    - use min-height to prevent content oveflow if further add content
      and use display flex for centering when content stuck to the top

